/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.fourgenius.www.admin_BackEnd;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.table.DefaultTableModel;
import public_access.MC_JavaDataBaseConnection;

/**
 *
 * @author deepalsuranga
 */
public class Jp_admin_user extends javax.swing.JPanel {

    /**
     * Creates new form _jp_admin_user
     */
    String user_id;
    public Jp_admin_user() {
        initComponents();
        set_email_Comb();
        load_allData();
//        disable.setVisible(false);
//        update.setVisible(false);
        bt_finish.setVisible(false);
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.windows.WindowsLookAndFeel");
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | UnsupportedLookAndFeelException ex) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        update = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_admin_Administrators = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        tbl_admin_Administrators_deactive = new javax.swing.JTable();
        _pl_registration_lecture_personalInformation_lectureName = new javax.swing.JPanel();
        _lb_registration_lecture_personalInformation_lectureName_sirName = new javax.swing.JLabel();
        tf_fname = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_lectureName_firstName = new javax.swing.JLabel();
        tf_lname = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_lectureName_lastName = new javax.swing.JLabel();
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth = new javax.swing.JLabel();
        tf_nic = new javax.swing.JTextField();
        pf_password = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_idInformation_nicNumber = new javax.swing.JLabel();
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1 = new javax.swing.JLabel();
        pf_confrmPassword = new javax.swing.JTextField();
        user_email = new javax.swing.JComboBox();
        bt_finish = new javax.swing.JButton();
        add = new javax.swing.JButton();
        disable = new javax.swing.JButton();

        setBackground(new java.awt.Color(51, 0, 102));
        setMinimumSize(new java.awt.Dimension(1360, 668));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("User");

        update.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        update.setText("Update User");
        update.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateActionPerformed(evt);
            }
        });

        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTabbedPane3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tbl_admin_Administrators.setBackground(new java.awt.Color(207, 216, 220));
        tbl_admin_Administrators.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbl_admin_Administrators.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_admin_Administrators.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Email", "NIC No"
            }
        ));
        jScrollPane1.setViewportView(tbl_admin_Administrators);

        jTabbedPane3.addTab("Active Users", jScrollPane1);

        tbl_admin_Administrators_deactive.setBackground(new java.awt.Color(207, 216, 220));
        tbl_admin_Administrators_deactive.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbl_admin_Administrators_deactive.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_admin_Administrators_deactive.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Name", "Email", "NIC No"
            }
        ));
        jScrollPane6.setViewportView(tbl_admin_Administrators_deactive);

        jTabbedPane3.addTab("De-active User", jScrollPane6);

        jTabbedPane2.addTab("Users", jTabbedPane3);

        _pl_registration_lecture_personalInformation_lectureName.setBackground(new java.awt.Color(0, 102, 102));
        _pl_registration_lecture_personalInformation_lectureName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "User Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        _lb_registration_lecture_personalInformation_lectureName_sirName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_lectureName_sirName.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_lectureName_sirName.setText("First Name");

        tf_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fnameActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_lectureName_firstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_lectureName_firstName.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_lectureName_firstName.setText("Last Name");

        tf_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_lnameActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_lectureName_lastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_lectureName_lastName.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_lectureName_lastName.setText("Email");

        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth.setText("Password");

        tf_nic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_nicActionPerformed(evt);
            }
        });

        pf_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_passwordActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_idInformation_nicNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_nicNumber.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_nicNumber.setText("NIC Number");

        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1.setText("Confrm Password");

        pf_confrmPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_confrmPasswordActionPerformed(evt);
            }
        });

        user_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        user_email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                user_emailMouseClicked(evt);
            }
        });

        bt_finish.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bt_finish.setText("Finish");
        bt_finish.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_finish.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_finishActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout _pl_registration_lecture_personalInformation_lectureNameLayout = new javax.swing.GroupLayout(_pl_registration_lecture_personalInformation_lectureName);
        _pl_registration_lecture_personalInformation_lectureName.setLayout(_pl_registration_lecture_personalInformation_lectureNameLayout);
        _pl_registration_lecture_personalInformation_lectureNameLayout.setHorizontalGroup(
            _pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_finish, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(user_email, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(_lb_registration_lecture_personalInformation_lectureName_sirName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(_lb_registration_lecture_personalInformation_lectureName_firstName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tf_lname, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(_lb_registration_lecture_personalInformation_lectureName_lastName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(_lb_registration_lecture_personalInformation_idInformation_nicNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE)
                        .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(tf_nic, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pf_password, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(tf_fname, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(pf_confrmPassword, javax.swing.GroupLayout.Alignment.LEADING)))
                .addContainerGap(107, Short.MAX_VALUE))
        );
        _pl_registration_lecture_personalInformation_lectureNameLayout.setVerticalGroup(
            _pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_lb_registration_lecture_personalInformation_lectureName_sirName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_lectureName_firstName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_lectureName_lastName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(user_email, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_nicNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_nic, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pf_password, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pf_confrmPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(bt_finish, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(53, Short.MAX_VALUE))
        );

        add.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        add.setText("Add User");
        add.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        disable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        disable.setText("Disable User");
        disable.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        disable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                disableActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(336, 336, 336)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(disable, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(update, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(_pl_registration_lecture_personalInformation_lectureName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(_pl_registration_lecture_personalInformation_lectureName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(disable, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateActionPerformed
 DefaultTableModel tableModel_user_active = (DefaultTableModel) tbl_admin_Administrators.getModel();
        try {
            ResultSet rs=MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select * from user where user_id='"+tableModel_user_active.getValueAt(tbl_admin_Administrators.getSelectedRow(), 0)+"'");
            if (rs.next()) {
               String name_full=rs.getString("user_name");
               String[] name=name_full.split(" ");
               tf_fname.setText(name[0]);
        tf_lname.setText(name[1]);
        user_email.addItem(rs.getString("user_email"));
        tf_nic.setText(rs.getString("user_nic"));
        pf_password.setText(rs.getString("user_password"));
        pf_confrmPassword.setText(rs.getString("user_password"));
       user_id=rs.getString("user_id");
            }
        bt_finish.setVisible(true);
        } catch (Exception e) {
            e.printStackTrace();
        }
 
    }//GEN-LAST:event_updateActionPerformed

    private void tf_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fnameActionPerformed

    private void tf_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_lnameActionPerformed

    private void tf_nicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_nicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_nicActionPerformed

    private void pf_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pf_passwordActionPerformed

    private void pf_confrmPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_confrmPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pf_confrmPasswordActionPerformed

    private void disableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_disableActionPerformed
DefaultTableModel tableModel_user_active = (DefaultTableModel) tbl_admin_Administrators.getModel();
        
        try {
            MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("update user set user_status='0' where='"+tableModel_user_active.getValueAt(tbl_admin_Administrators.getSelectedRow(), 0)+"'");
        load_allData();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_disableActionPerformed

    private void user_emailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_user_emailMouseClicked
        try {
            
            ResultSet rs=MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select a.employee_academic_user_info_personal_nic,b.employee_academic_user_info_name_first_name,b.employee_academic_user_info_name_surName from employee_academic_user_info_personal a left join employee_academic_user_info_name b on a.employee_academic_user_id=b.employee_academic_user_id left join employee_academic_user_info_contact c on a.employee_academic_user_id=c.employee_academic_user_id where c.employee_academic_user_info_contact_email='"+user_email.getSelectedItem().toString()+"'");
            
            while (rs.next()) {                
                tf_fname.setText(rs.getString("employee_academic_user_info_name_first_name"));
                tf_lname.setText(rs.getString("employee_academic_user_info_name_surName"));
                tf_nic.setText(rs.getString("employee_academic_user_info_personal_nic"));
               
                pf_password.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
       
    }//GEN-LAST:event_user_emailMouseClicked

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        try {
           String fullname=tf_fname.getText()+" "+tf_lname.getText();
           
            MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("insert into (user_id,user_email,user_password,user_status,user_name,user_nic) values(,'"+user_email.getSelectedItem().toString()+"','"+pf_password.getText()+"','1','"+fullname+"','"+tf_nic.getText()+"'");
      
        load_allData();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void bt_finishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_finishActionPerformed
        try {
           String fullName=tf_fname.getText()+" "+tf_lname.getText();
            MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("update user set user_email='"+user_email.getSelectedItem()+"',user_password='"+pf_confrmPassword.getText()+"',user_name='"+fullName+"',user_nic='"+tf_nic.getText()+"'");
            JOptionPane.showMessageDialog(this, "Success Fully Updated!");
            load_allData();
            set_email_Comb();
            bt_finish.setVisible(false);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_bt_finishActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_dateOfBirth;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_nicNumber;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_lectureName_firstName;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_lectureName_lastName;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_lectureName_sirName;
    private javax.swing.JPanel _pl_registration_lecture_personalInformation_lectureName;
    private javax.swing.JButton add;
    private javax.swing.JButton bt_finish;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JButton disable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTextField pf_confrmPassword;
    private javax.swing.JTextField pf_password;
    private javax.swing.JTable tbl_admin_Administrators;
    private javax.swing.JTable tbl_admin_Administrators_deactive;
    private javax.swing.JTextField tf_fname;
    private javax.swing.JTextField tf_lname;
    private javax.swing.JTextField tf_nic;
    private javax.swing.JButton update;
    private javax.swing.JComboBox user_email;
    // End of variables declaration//GEN-END:variables

    void set_email_Comb() {

        try {
            ResultSet rs,rs2;
            String sql = "SELECT * FROM employee_academic_user_info_contact";
            
            rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery(sql);
            

            while (rs.next()) {
                String academic_email = rs.getString("employee_academic_user_info_contact_email");
                
                user_email.addItem(academic_email);
               
            }
            rs.close();
            
            String sql1 = "SELECT * FROM employee_nonAcademic_user_info_contact";
            rs2 = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery(sql1);
             while (rs2.next()) {
               
                String nonAcademic_email=rs2.getString("employee_nonAcademic_user_info_contact_email");
              
                user_email.addItem(nonAcademic_email);
            }
            rs2.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void load_allData() {
        try {

            DefaultTableModel tableModel_user_active = (DefaultTableModel) tbl_admin_Administrators.getModel();
            tableModel_user_active.setRowCount(0);

            Connection connection = MC_JavaDataBaseConnection.myConnection();
            Statement statement = connection.createStatement();

            String sql = "select * from user where user_status='1'";
            ResultSet rs = statement.executeQuery(sql);
            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("user_id"));
                v.add(rs.getString("user_name") );
                v.add(rs.getString("user_email"));
              v.add(rs.getString("user_nic")); 
                tableModel_user_active.addRow(v);
            }
            
            
            DefaultTableModel tableModel_user_deactive = (DefaultTableModel) tbl_admin_Administrators_deactive.getModel();
            tableModel_user_deactive.setRowCount(0);
             String sql1 = "select * from user where user_status='0'";
            ResultSet rs1 = statement.executeQuery(sql1);
            while (rs1.next()) {
                Vector v = new Vector();
                v.add(rs1.getString("user_id"));
                v.add(rs1.getString("user_name") );
                v.add(rs1.getString("user_email"));
              v.add(rs1.getString("user_nic")); 
                tableModel_user_active.addRow(v);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    
}
