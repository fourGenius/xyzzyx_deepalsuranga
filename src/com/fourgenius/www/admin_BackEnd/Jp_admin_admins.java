/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.fourgenius.www.admin_BackEnd;

import java.awt.Color;
import java.awt.FileDialog;
import java.awt.Image;
import java.io.File;
import java.io.FileInputStream;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import public_access.MC_JavaDataBaseConnection;

/**
 *
 * @author deepalsuranga
 */
public class Jp_admin_admins extends javax.swing.JPanel {

    /*
     * Creates new form _jp_admin_admins
     */
    String id;
int ad_id;
    public Jp_admin_admins() {
        initComponents();
        set_admin_email_Comb();
        set_admin_ans_Comb();
        try {
            ResultSet rs=MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select max(admin_info_id) as id_count from admin_info");
            if (rs.next()) {
                ad_id=rs.getInt("id_count")+1;
                lb_admin_id.setText(rs.getString("id_count"));
            }
        } catch (Exception ex) {
        }
        load_allData();
        bt_disable_admin.setVisible(false);
        bt_update_admin.setVisible(false);

        //Border border=BorderFactory.createLineBorder(Color.white, 1);
        //admin_main_panel.add("Label Set", (Component) border);
//        changeBtnsss.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        admin_main_panel = new javax.swing.JPanel();
        lb_admin_id = new javax.swing.JLabel();
        admin_email = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        lb_loadImage = new javax.swing.JLabel();
        lb_id = new javax.swing.JLabel();
        lb_name = new javax.swing.JLabel();
        lb_email = new javax.swing.JLabel();
        lb_status = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        Add_Administators = new javax.swing.JPanel();
        _pl_registration_lecture_personalInformation_lectureName = new javax.swing.JPanel();
        _lb_registration_lecture_personalInformation_lectureName_sirName = new javax.swing.JLabel();
        tf_fname = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_lectureName_firstName = new javax.swing.JLabel();
        tf_lname = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_lectureName_lastName = new javax.swing.JLabel();
        tf_email = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth = new javax.swing.JLabel();
        tf_image = new javax.swing.JTextField();
        _lb_registration_lecture_personalInformation_idInformation_nicNumber = new javax.swing.JLabel();
        pf_conPassword = new javax.swing.JPasswordField();
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1 = new javax.swing.JLabel();
        pf_password = new javax.swing.JPasswordField();
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth2 = new javax.swing.JLabel();
        co_securityQu = new javax.swing.JComboBox();
        jLabel15 = new javax.swing.JLabel();
        rb_admin = new javax.swing.JRadioButton();
        rb_manager = new javax.swing.JRadioButton();
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth3 = new javax.swing.JLabel();
        tf_securityAnswer = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane4 = new javax.swing.JTabbedPane();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbl_admin_administrators_active = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        tbl_admin_Administrators3 = new javax.swing.JTable();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_admin_Manager = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbl_admin_Administrators4 = new javax.swing.JTable();
        bt_disable_admin = new javax.swing.JButton();
        bt_update_admin = new javax.swing.JButton();
        bt_add_admin = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(96, 125, 139));
        setMinimumSize(new java.awt.Dimension(1360, 668));

        admin_main_panel.setLayout(new java.awt.CardLayout());

        lb_admin_id.setText("1");

        admin_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        admin_email.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                admin_emailMouseClicked(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 102, 102));

        lb_loadImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_loadImage.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        lb_id.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lb_id.setForeground(new java.awt.Color(255, 255, 255));
        lb_id.setText("Load Administrator ID");

        lb_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_name.setForeground(new java.awt.Color(255, 255, 255));
        lb_name.setText("Load Administrator Name");

        lb_email.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_email.setForeground(new java.awt.Color(255, 255, 255));
        lb_email.setText("Load Administrator Email");

        lb_status.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        lb_status.setForeground(new java.awt.Color(255, 255, 255));
        lb_status.setText("Load Administrator Status");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Administrator ID:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Administrator Name:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Email:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Status:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_status)
                    .addComponent(lb_email)
                    .addComponent(lb_id)
                    .addComponent(lb_name))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_loadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lb_loadImage, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(lb_id))
                .addGap(29, 29, 29)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(lb_name))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(lb_email))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel6)
                    .addComponent(lb_status))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Add_Administators.setBackground(new java.awt.Color(0, 102, 102));

        _pl_registration_lecture_personalInformation_lectureName.setBackground(new java.awt.Color(0, 102, 102));
        _pl_registration_lecture_personalInformation_lectureName.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Administrator Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        _pl_registration_lecture_personalInformation_lectureName.setPreferredSize(new java.awt.Dimension(444, 550));

        _lb_registration_lecture_personalInformation_lectureName_sirName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_lectureName_sirName.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_lectureName_sirName.setText("First Name");

        tf_fname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_fname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_fnameActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_lectureName_firstName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_lectureName_firstName.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_lectureName_firstName.setText("Last Name");

        tf_lname.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_lname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_lnameActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_lectureName_lastName.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_lectureName_lastName.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_lectureName_lastName.setText("Email");

        tf_email.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tf_email.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_emailActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth.setText("Password");

        tf_image.setEditable(false);
        tf_image.setText("Browse Image");
        tf_image.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tf_imageMouseClicked(evt);
            }
        });
        tf_image.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tf_imageActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_idInformation_nicNumber.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_nicNumber.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_nicNumber.setText("Image");

        pf_conPassword.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pf_conPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_conPasswordActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1.setText("Security Question");

        pf_password.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        pf_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pf_passwordActionPerformed(evt);
            }
        });

        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth2.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth2.setText("Conform Password");

        co_securityQu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                co_securityQuActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setText("Position Type");

        rb_admin.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(rb_admin);
        rb_admin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb_admin.setForeground(new java.awt.Color(255, 255, 255));
        rb_admin.setText("Administrator");

        rb_manager.setBackground(new java.awt.Color(0, 102, 102));
        buttonGroup1.add(rb_manager);
        rb_manager.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        rb_manager.setForeground(new java.awt.Color(255, 255, 255));
        rb_manager.setText("Manager");

        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth3.setForeground(new java.awt.Color(255, 255, 255));
        _lb_registration_lecture_personalInformation_idInformation_dateOfBirth3.setText("Security Answer");

        tf_securityAnswer.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout _pl_registration_lecture_personalInformation_lectureNameLayout = new javax.swing.GroupLayout(_pl_registration_lecture_personalInformation_lectureName);
        _pl_registration_lecture_personalInformation_lectureName.setLayout(_pl_registration_lecture_personalInformation_lectureNameLayout);
        _pl_registration_lecture_personalInformation_lectureNameLayout.setHorizontalGroup(
            _pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                        .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_lb_registration_lecture_personalInformation_lectureName_sirName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_lb_registration_lecture_personalInformation_lectureName_firstName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                        .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(tf_securityAnswer, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(co_securityQu, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pf_conPassword, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 403, Short.MAX_VALUE)
                            .addComponent(pf_password, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, _pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                                .addComponent(rb_admin)
                                .addGap(18, 18, 18)
                                .addComponent(rb_manager))
                            .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_email, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tf_image, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(_lb_registration_lecture_personalInformation_idInformation_nicNumber, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(_lb_registration_lecture_personalInformation_lectureName_lastName, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        _pl_registration_lecture_personalInformation_lectureNameLayout.setVerticalGroup(
            _pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, _pl_registration_lecture_personalInformation_lectureNameLayout.createSequentialGroup()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rb_admin)
                    .addComponent(rb_manager))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(_lb_registration_lecture_personalInformation_lectureName_sirName)
                    .addComponent(_lb_registration_lecture_personalInformation_lectureName_firstName))
                .addGap(5, 5, 5)
                .addGroup(_pl_registration_lecture_personalInformation_lectureNameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tf_fname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tf_lname, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_lectureName_lastName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_email, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_nicNumber)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_image, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pf_password, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pf_conPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(co_securityQu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(_lb_registration_lecture_personalInformation_idInformation_dateOfBirth3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tf_securityAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout Add_AdministatorsLayout = new javax.swing.GroupLayout(Add_Administators);
        Add_Administators.setLayout(Add_AdministatorsLayout);
        Add_AdministatorsLayout.setHorizontalGroup(
            Add_AdministatorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Add_AdministatorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_pl_registration_lecture_personalInformation_lectureName, javax.swing.GroupLayout.DEFAULT_SIZE, 452, Short.MAX_VALUE)
                .addContainerGap())
        );
        Add_AdministatorsLayout.setVerticalGroup(
            Add_AdministatorsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Add_AdministatorsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(_pl_registration_lecture_personalInformation_lectureName, javax.swing.GroupLayout.PREFERRED_SIZE, 561, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.setBackground(new java.awt.Color(153, 153, 153));
        jTabbedPane2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jTabbedPane4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tbl_admin_administrators_active.setBackground(new java.awt.Color(207, 216, 220));
        tbl_admin_administrators_active.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbl_admin_administrators_active.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_admin_administrators_active.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Administrator ID", "Name", "Email", "Security Qu:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_admin_administrators_active.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_admin_administrators_activeMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbl_admin_administrators_active);

        jTabbedPane4.addTab("Active Administrator", jScrollPane3);

        tbl_admin_Administrators3.setBackground(new java.awt.Color(207, 216, 220));
        tbl_admin_Administrators3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbl_admin_Administrators3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_admin_Administrators3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Administrator ID", "Name", "Email", "Security Qu"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_admin_Administrators3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_admin_Administrators3MouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tbl_admin_Administrators3);

        jTabbedPane4.addTab("De-active Administrator", jScrollPane4);

        jTabbedPane2.addTab("Administrators", jTabbedPane4);

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        tbl_admin_Manager.setBackground(new java.awt.Color(207, 216, 220));
        tbl_admin_Manager.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbl_admin_Manager.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_admin_Manager.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Manager ID", "Name", "Email", "Security Qu:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_admin_Manager.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tbl_admin_Manager);
        if (tbl_admin_Manager.getColumnModel().getColumnCount() > 0) {
            tbl_admin_Manager.getColumnModel().getColumn(0).setResizable(false);
            tbl_admin_Manager.getColumnModel().getColumn(1).setResizable(false);
            tbl_admin_Manager.getColumnModel().getColumn(2).setResizable(false);
            tbl_admin_Manager.getColumnModel().getColumn(3).setResizable(false);
        }

        jTabbedPane1.addTab("Active Managers", jScrollPane2);

        tbl_admin_Administrators4.setBackground(new java.awt.Color(207, 216, 220));
        tbl_admin_Administrators4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        tbl_admin_Administrators4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tbl_admin_Administrators4.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Administrator ID", "Name", "Email", "Security Qu:"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbl_admin_Administrators4.getTableHeader().setReorderingAllowed(false);
        jScrollPane5.setViewportView(tbl_admin_Administrators4);
        if (tbl_admin_Administrators4.getColumnModel().getColumnCount() > 0) {
            tbl_admin_Administrators4.getColumnModel().getColumn(0).setResizable(false);
            tbl_admin_Administrators4.getColumnModel().getColumn(1).setResizable(false);
            tbl_admin_Administrators4.getColumnModel().getColumn(2).setResizable(false);
            tbl_admin_Administrators4.getColumnModel().getColumn(3).setResizable(false);
        }

        jTabbedPane1.addTab("De-active Managers", jScrollPane5);

        jTabbedPane2.addTab("Managers", jTabbedPane1);

        bt_disable_admin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bt_disable_admin.setText("Disable Administrator");
        bt_disable_admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_disable_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_disable_adminActionPerformed(evt);
            }
        });

        bt_update_admin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bt_update_admin.setText("Update Administrator");
        bt_update_admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_update_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_update_adminActionPerformed(evt);
            }
        });

        bt_add_admin.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        bt_add_admin.setText("Add Administrator");
        bt_add_admin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bt_add_admin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_add_adminActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 866, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(bt_disable_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bt_update_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(bt_add_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bt_disable_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_update_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bt_add_admin, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBackground(new java.awt.Color(0, 102, 102));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Administrator Information");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(1097, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addGap(0, 1, Short.MAX_VALUE))
        );

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jButton1.setText("Update Status");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "active", "deactive" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(admin_main_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(4, 4, 4)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_admin_id, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(admin_email, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Add_Administators, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(6, 6, 6)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(6, 6, 6))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addGap(75, 75, 75)))
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(628, 628, 628)
                        .addComponent(admin_main_panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addComponent(lb_admin_id, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(admin_email, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addComponent(Add_Administators, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void bt_add_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_add_adminActionPerformed
        ResultSet resultSet, rs;

        try {

            String type_p;
            if (rb_admin.isSelected()) {
                type_p = "Administrator";
            } else {
                type_p = "Manager";
            }
            System.out.println("Type is :" + type_p);

            String type = type_p;
            String fname = tf_fname.getText().trim();
            String lname = tf_lname.getText().trim();
            String emai = tf_email.getText().trim();
            String image = tf_image.getText().trim();
            String password = new String(pf_password.getPassword()).trim();
            String passwordC = new String(pf_conPassword.getPassword()).trim();

            String admin_info_id = lb_admin_id.getText().trim();
            String qu = co_securityQu.getSelectedItem().toString() + "";
            String answer = tf_securityAnswer.getText();
            FileInputStream is = new FileInputStream(new File(s));

            if (!fname.isEmpty() & !lname.isEmpty() & password.equals(passwordC)) {

                Connection c = MC_JavaDataBaseConnection.myConnection();
                PreparedStatement ps = c.prepareStatement("INSERT INTO admin_info(admin_info_id,admin_firstName,admin_lastName,admin_email,admin_security_qu,admin_security_an,admin_image,admin_type,admin_password,admin_status) VALUES(?,?,?,?,?,?,?,?,?,?)");

                ps.setString(1, ad_id+"");
                ps.setString(2, fname);
                ps.setString(3, lname);
                ps.setString(4, emai);
                ps.setString(5, qu);
                ps.setString(6, answer);
                ps.setBlob(7, is);
                ps.setString(8, type);
                ps.setString(9, password);
               ps.setString(10,"active");
                ps.executeUpdate();

                // MC_JavaDataBaseConnection.add_data_WithColumns("admin_info", "admin_info_id,admin_firstName,admin_lastName,admin_email,admin_security_qu,admin_security_an,admin_image,admin_type,admin_password", admin_info_id + "," + fname + "," + lname + "," + emai + "," + qu + "," + answer + "," + fis + "," + type + "," + password);
                JOptionPane.showMessageDialog(this, "Administortor successfly added!");

                c.close();
                ps.close();
                load_allData();

            } else if (!password.equals(passwordC)) {

                pf_password.setBackground(new Color(244, 67, 54));
                pf_conPassword.setBackground(new Color(244, 67, 54));

            } else {
                tf_fname.setBackground(new Color(244, 67, 54));
                tf_lname.setBackground(new Color(244, 67, 54));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }


    }//GEN-LAST:event_bt_add_adminActionPerformed

    private void bt_update_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_update_adminActionPerformed


    }//GEN-LAST:event_bt_update_adminActionPerformed

    private void tf_fnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_fnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_fnameActionPerformed

    private void tf_lnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_lnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_lnameActionPerformed

    private void tf_emailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_emailActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_emailActionPerformed

    private void tf_imageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tf_imageActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tf_imageActionPerformed

    private void bt_disable_adminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_disable_adminActionPerformed

//        changeBtnsss.setVisible(true);
//        changeBtnsss.setText("Disable Administrator");

    }//GEN-LAST:event_bt_disable_adminActionPerformed

    private void admin_emailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_admin_emailMouseClicked
        try {
            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select * from admin_info where admin_email='" + admin_email.getSelectedItem().toString() + "'");
            while (rs.next()) {

                tf_fname.setText(rs.getString("admin_firstName"));
                tf_lname.setText(rs.getString("admin_lastName"));
                tf_image.setText("admin_nic");
                tf_email.setText(admin_email.getSelectedItem().toString());
                pf_password.grabFocus();
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_admin_emailMouseClicked

    private void pf_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_passwordActionPerformed
        pf_conPassword.grabFocus();
    }//GEN-LAST:event_pf_passwordActionPerformed

    private void pf_conPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pf_conPasswordActionPerformed
        co_securityQu.setEditable(true);
        co_securityQu.grabFocus();
    }//GEN-LAST:event_pf_conPasswordActionPerformed

    private void co_securityQuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_co_securityQuActionPerformed
        tf_securityAnswer.grabFocus();
    }//GEN-LAST:event_co_securityQuActionPerformed

    String s;
    private void tf_imageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tf_imageMouseClicked

        FileDialog fd = new FileDialog(new JFrame(), "choose", FileDialog.LOAD);
        fd.setVisible(true);
        fd.setDirectory("C:\\");

        String fn = fd.getFile();
        String tt = fd.getDirectory();
        
        String file = fd.getFile();
        String fullPath = tt + fn;

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.IMAGE", "jpg", "gif", "png");
        fileChooser.addChoosableFileFilter(filter);
        int result = fileChooser.showSaveDialog(null);
        if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            lb_loadImage.setIcon(ResizeImage(path));
            s = path;
            tf_image.setText(s);
        } else if (result == JFileChooser.CANCEL_OPTION) {
            System.out.println("No Data");
        }


    }//GEN-LAST:event_tf_imageMouseClicked

    private void tbl_admin_administrators_activeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_admin_administrators_activeMouseClicked

        int gsr=tbl_admin_administrators_active.getSelectedRow();
        int gsc=tbl_admin_administrators_active.getSelectedColumn();
        String string = (String) tbl_admin_administrators_active.getValueAt(gsr, 0);
        try {
            ResultSet rs=MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select * from admin_info where admin_info_id='"+string+"'");
            if (rs.next()) {
                lb_id.setText(string);
                lb_name.setText(rs.getString("admin_firstName")+" "+rs.getString("admin_lastName"));
                lb_email.setText(rs.getString("admin_email"));
                lb_status.setText(rs.getString("admin_status"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("Value is :" + string);


    }//GEN-LAST:event_tbl_admin_administrators_activeMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        try {
            MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("update admin_info set admin_status='"+jComboBox1.getSelectedItem().toString()+"' where admin_info_id='"+lb_id.getText()+"'");
        load_allData();
        } catch (Exception e) {
        }
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void tbl_admin_Administrators3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_admin_Administrators3MouseClicked

         int gsr=tbl_admin_Administrators3.getSelectedRow();
        int gsc=tbl_admin_Administrators3.getSelectedColumn();
        String string = (String) tbl_admin_Administrators3.getValueAt(gsr, 0);
        try {
            ResultSet rs=MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select * from admin_info where admin_info_id='"+string+"'");
            if (rs.next()) {
                lb_id.setText(string);
                lb_name.setText(rs.getString("admin_firstName")+" "+rs.getString("admin_lastName"));
                lb_email.setText(rs.getString("admin_email"));
                lb_status.setText(rs.getString("admin_status"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        System.out.println("Value is :" + string);
        
    }//GEN-LAST:event_tbl_admin_Administrators3MouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Add_Administators;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_dateOfBirth;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_dateOfBirth1;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_dateOfBirth2;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_dateOfBirth3;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_idInformation_nicNumber;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_lectureName_firstName;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_lectureName_lastName;
    private javax.swing.JLabel _lb_registration_lecture_personalInformation_lectureName_sirName;
    private javax.swing.JPanel _pl_registration_lecture_personalInformation_lectureName;
    private javax.swing.JComboBox admin_email;
    private javax.swing.JPanel admin_main_panel;
    private javax.swing.JButton bt_add_admin;
    private javax.swing.JButton bt_disable_admin;
    private javax.swing.JButton bt_update_admin;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox co_securityQu;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JLabel lb_admin_id;
    private javax.swing.JLabel lb_email;
    private javax.swing.JLabel lb_id;
    private javax.swing.JLabel lb_loadImage;
    private javax.swing.JLabel lb_name;
    private javax.swing.JLabel lb_status;
    private javax.swing.JPasswordField pf_conPassword;
    private javax.swing.JPasswordField pf_password;
    private javax.swing.JRadioButton rb_admin;
    private javax.swing.JRadioButton rb_manager;
    private javax.swing.JTable tbl_admin_Administrators3;
    private javax.swing.JTable tbl_admin_Administrators4;
    private javax.swing.JTable tbl_admin_Manager;
    private javax.swing.JTable tbl_admin_administrators_active;
    private javax.swing.JTextField tf_email;
    private javax.swing.JTextField tf_fname;
    private javax.swing.JTextField tf_image;
    private javax.swing.JTextField tf_lname;
    private javax.swing.JTextField tf_securityAnswer;
    // End of variables declaration//GEN-END:variables

    private void load_allData() {
        System.out.println("llll");
        Connection connection = MC_JavaDataBaseConnection.myConnection();
        try {

            DefaultTableModel tableModel_administrator_active = (DefaultTableModel) tbl_admin_administrators_active.getModel();
            tableModel_administrator_active.setRowCount(0);

            Statement statement = connection.createStatement();

            String query = "SELECT * FROM admin_info WHERE admin_type='Administrator' and admin_status='active'";
            ResultSet rs = statement.executeQuery(query);

            while (rs.next()) {
                Vector v = new Vector();
                v.add(rs.getString("admin_info_id"));
                v.add(rs.getString("admin_firstName") + " " + rs.getString("admin_lastName"));
                v.add(rs.getString("admin_email"));
                v.add(rs.getString("admin_security_qu"));

                tableModel_administrator_active.addRow(v);

            }
            rs.close();
            
            
            DefaultTableModel tableModel_administrator_deactive = (DefaultTableModel) tbl_admin_Administrators3.getModel();
            tableModel_administrator_deactive.setRowCount(0);

            Statement statement1 = connection.createStatement();

            String query1 = "SELECT * FROM admin_info WHERE admin_type='Administrator' and admin_status='deactive'";
            ResultSet rs1 = statement1.executeQuery(query1);

            while (rs1.next()) {
                Vector v = new Vector();
                v.add(rs1.getString("admin_info_id"));
                v.add(rs1.getString("admin_firstName") + " " + rs1.getString("admin_lastName"));
                v.add(rs1.getString("admin_email"));
                v.add(rs1.getString("admin_security_qu"));

                tableModel_administrator_deactive.addRow(v);

            }
            rs1.close();

            //////////////////////////////////////////////////////Fill Manager///////////////////////////////////////////           
            DefaultTableModel tableModel_manager_active = (DefaultTableModel) tbl_admin_Manager.getModel();
            tableModel_manager_active.setRowCount(0);
            String query_manager = "SELECT * FROM admin_info WHERE admin_type='Manager' and admin_status='1'";
            ResultSet rs_manager = statement.executeQuery(query_manager);

            while (rs_manager.next()) {
                Vector v = new Vector();
                v.add(rs_manager.getString("admin_info_id"));
                v.add(rs_manager.getString("admin_firstName") + " " + rs_manager.getString("admin_lastName"));
                v.add(rs_manager.getString("admin_email"));
                v.add(rs_manager.getString("admin_security_qu"));

                tableModel_manager_active.addRow(v);
            }
            rs_manager.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
        try {
            DefaultTableModel tableModel_Manager_deactive = (DefaultTableModel) tbl_admin_Manager.getModel();
            tableModel_Manager_deactive.setRowCount(0);
            String query_deactiveManager = "SELECT * FROM admin_info WHERE admin_type='Manager' & admin_status='deactive'";
            ResultSet rs_de_Manager;
            Statement s_de_Manager = connection.createStatement();

            rs_de_Manager = s_de_Manager.executeQuery(query_deactiveManager);

            while (rs_de_Manager.next()) {

            }
        } catch (SQLException ex) {
            Logger.getLogger(Jp_admin_admins.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    void set_admin_email_Comb() {

        try {
            ResultSet rs1;
            String sql = "SELECT * FROM admin_info";
            rs1 = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery(sql);

            while (rs1.next()) {
                String name = rs1.getString("admin_email");
                admin_email.addItem(name);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    void set_admin_ans_Comb() {

        try {
            ResultSet rs;
            String sql = "SELECT * FROM user_recovery";
            rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery(sql);

            while (rs.next()) {
                String name = rs.getString("stu_user_recovery_question_no");
                co_securityQu.addItem(name);
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void generate_admin_info_id() {
        try {
            String id_type = "ID";
            String st = "AD";

            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("SELECT COUNT(admin_info_id) AS x FROM admin_info");

            int idcount = rs.getInt("x");
            int id_no = ++idcount;

            String a = Integer.toString(id_no);
            int length = a.length();
            System.out.println(length);

            String idn = Integer.toString(id_no);
            String zeros;
            switch (length) {
                case 1:
                    zeros = "00000";
                    break;
                case 2:
                    zeros = "0000";
                    break;
                case 3:
                    zeros = "000";
                    break;
                case 4:
                    zeros = "00";
                    break;
                case 5:
                    zeros = "0";
                    break;
                default:
                    zeros = "";
                    break;
            }
            id = id_type + "-" + st + "-" + zeros + idn;

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public ImageIcon ResizeImage(String imgPath) {
        ImageIcon MyImage = new ImageIcon(imgPath);
        Image img = MyImage.getImage();
        Image newImage = img.getScaledInstance(lb_loadImage.getWidth(), lb_loadImage.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }

}
//
