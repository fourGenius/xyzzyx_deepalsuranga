/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.fourgenius.www.public_access.inventory;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import javax.swing.table.DefaultTableModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;
import public_access.MC_JavaDataBaseConnection;

public class invoice extends javax.swing.JPanel {

    String item;
    String qt;
    double avbqty;

    public invoice() {
        initComponents();
        initComponents();
        new Thread(new Runnable() {

            @Override
            public void run() {
               loadInvoiceId();
        loadTimeAndDate();
            }
        }).start();
        customerNameSearch.setVisible(false);
        SinvoiceId.setVisible(false);
        sp_description_search.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bal = new javax.swing.JTextField();
        Dis = new javax.swing.JTextField();
        pay = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        SinvoiceId = new javax.swing.JScrollPane();
        sInvoiceId = new javax.swing.JList();
        sInvoiceIdSearch = new javax.swing.JTextField();
        clear = new javax.swing.JButton();
        find = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        customerId = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        lb_date_view = new javax.swing.JTextField();
        customername = new javax.swing.JTextField();
        customerNameSearch = new javax.swing.JScrollPane();
        CustomerNameSearch = new javax.swing.JList();
        id = new javax.swing.JTextField();
        net = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        sub = new javax.swing.JTextField();
        lb_time_date = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        code = new javax.swing.JTextField();
        description = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        price = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        total = new javax.swing.JTextField();
        sp_description_search = new javax.swing.JScrollPane();
        li_description_search = new javax.swing.JList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel15 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(2, 119, 189));
        setPreferredSize(new java.awt.Dimension(100, 40));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bal.setEditable(false);
        bal.setMaximumSize(new java.awt.Dimension(308, 20));
        bal.setMinimumSize(new java.awt.Dimension(308, 20));
        bal.setPreferredSize(new java.awt.Dimension(300, 40));
        bal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                balActionPerformed(evt);
            }
        });
        add(bal, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 590, 300, 40));

        Dis.setMaximumSize(new java.awt.Dimension(210, 20));
        Dis.setMinimumSize(new java.awt.Dimension(210, 20));
        Dis.setPreferredSize(new java.awt.Dimension(100, 40));
        Dis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DisActionPerformed(evt);
            }
        });
        Dis.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                DisKeyTyped(evt);
            }
        });
        add(Dis, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 470, 300, 40));

        pay.setMaximumSize(new java.awt.Dimension(210, 20));
        pay.setMinimumSize(new java.awt.Dimension(210, 20));
        pay.setPreferredSize(new java.awt.Dimension(100, 40));
        pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payActionPerformed(evt);
            }
        });
        pay.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                payKeyTyped(evt);
            }
        });
        add(pay, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 530, 300, 40));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setForeground(java.awt.Color.white);
        jLabel1.setText("Customer's Name");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 70, -1, -1));

        jPanel3.setBackground(new java.awt.Color(2, 119, 189));
        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Find Invoice", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 18), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel18.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel18.setForeground(java.awt.Color.white);
        jLabel18.setText("Invoice ID");
        jPanel3.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 40, -1, -1));

        sInvoiceId.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        sInvoiceId.setAlignmentY(2.0F);
        sInvoiceId.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sInvoiceId.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        sInvoiceId.setVisibleRowCount(0);
        sInvoiceId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sInvoiceIdMouseClicked(evt);
            }
        });
        sInvoiceId.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sInvoiceIdKeyReleased(evt);
            }
        });
        SinvoiceId.setViewportView(sInvoiceId);

        jPanel3.add(SinvoiceId, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 340, 80));

        sInvoiceIdSearch.setMaximumSize(new java.awt.Dimension(230, 20));
        sInvoiceIdSearch.setMinimumSize(new java.awt.Dimension(230, 20));
        sInvoiceIdSearch.setPreferredSize(new java.awt.Dimension(230, 20));
        sInvoiceIdSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                sInvoiceIdSearchKeyReleased(evt);
            }
        });
        jPanel3.add(sInvoiceIdSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 340, 40));

        clear.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        clear.setForeground(java.awt.Color.white);
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fourgenius/www/public_access/user/login/images_butons/buton_blue_100x50.png"))); // NOI18N
        clear.setText("Clear");
        clear.setBorderPainted(false);
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.setFocusPainted(false);
        clear.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        clear.setMaximumSize(new java.awt.Dimension(100, 50));
        clear.setMinimumSize(new java.awt.Dimension(100, 50));
        clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearActionPerformed(evt);
            }
        });
        jPanel3.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 120, 100, 50));

        find.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        find.setForeground(java.awt.Color.white);
        find.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/fourgenius/www/public_access/user/login/images_butons/buton_blue_100x50.png"))); // NOI18N
        find.setText("Find");
        find.setBorderPainted(false);
        find.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        find.setFocusPainted(false);
        find.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        find.setMaximumSize(new java.awt.Dimension(100, 50));
        find.setMinimumSize(new java.awt.Dimension(100, 50));
        find.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findActionPerformed(evt);
            }
        });
        jPanel3.add(find, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 120, 100, 50));

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(910, 460, 430, 180));

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel10.setForeground(java.awt.Color.white);
        jLabel10.setText("Sub Total");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 480, -1, 20));

        customerId.setEditable(false);
        customerId.setMaximumSize(new java.awt.Dimension(150, 20));
        customerId.setMinimumSize(new java.awt.Dimension(150, 20));
        customerId.setPreferredSize(new java.awt.Dimension(100, 40));
        customerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customerIdActionPerformed(evt);
            }
        });
        add(customerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 60, 150, -1));

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel11.setForeground(java.awt.Color.white);
        jLabel11.setText("Net Amount");
        add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 540, -1, 20));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setForeground(java.awt.Color.white);
        jLabel2.setText("Invoice ID");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 110, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel12.setForeground(java.awt.Color.white);
        jLabel12.setText("Balance");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 590, -1, 20));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setForeground(java.awt.Color.white);
        jLabel13.setText("Discount");
        add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setForeground(java.awt.Color.white);
        jLabel3.setText("Invoice Date");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 70, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel14.setForeground(java.awt.Color.white);
        jLabel14.setText("Payment");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 540, -1, -1));

        lb_date_view.setEditable(false);
        lb_date_view.setMaximumSize(new java.awt.Dimension(260, 20));
        lb_date_view.setMinimumSize(new java.awt.Dimension(260, 20));
        lb_date_view.setPreferredSize(new java.awt.Dimension(100, 40));
        add(lb_date_view, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 70, 260, -1));

        customername.setMaximumSize(new java.awt.Dimension(170, 20));
        customername.setMinimumSize(new java.awt.Dimension(170, 20));
        customername.setPreferredSize(new java.awt.Dimension(100, 40));
        customername.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                customernameFocusLost(evt);
            }
        });
        customername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                customernameActionPerformed(evt);
            }
        });
        customername.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                customernameKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                customernameKeyTyped(evt);
            }
        });
        add(customername, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 270, -1));

        CustomerNameSearch.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        CustomerNameSearch.setAlignmentY(2.0F);
        CustomerNameSearch.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        CustomerNameSearch.setLayoutOrientation(javax.swing.JList.HORIZONTAL_WRAP);
        CustomerNameSearch.setVisibleRowCount(0);
        CustomerNameSearch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerNameSearchMouseClicked(evt);
            }
        });
        CustomerNameSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                CustomerNameSearchKeyReleased(evt);
            }
        });
        customerNameSearch.setViewportView(CustomerNameSearch);

        add(customerNameSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 100, 270, 80));

        id.setEditable(false);
        id.setMaximumSize(new java.awt.Dimension(170, 20));
        id.setMinimumSize(new java.awt.Dimension(170, 20));
        id.setPreferredSize(new java.awt.Dimension(100, 40));
        add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 110, 270, -1));

        net.setEditable(false);
        net.setMaximumSize(new java.awt.Dimension(308, 20));
        net.setMinimumSize(new java.awt.Dimension(308, 20));
        net.setPreferredSize(new java.awt.Dimension(300, 40));
        add(net, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 530, 300, 40));

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel4.setForeground(java.awt.Color.white);
        jLabel4.setText("Invoice Time");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(960, 110, -1, -1));

        sub.setEditable(false);
        sub.setMaximumSize(new java.awt.Dimension(308, 20));
        sub.setMinimumSize(new java.awt.Dimension(308, 20));
        sub.setPreferredSize(new java.awt.Dimension(300, 40));
        add(sub, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 470, 300, 40));

        lb_time_date.setEditable(false);
        lb_time_date.setMaximumSize(new java.awt.Dimension(260, 20));
        lb_time_date.setMinimumSize(new java.awt.Dimension(260, 20));
        lb_time_date.setPreferredSize(new java.awt.Dimension(100, 40));
        add(lb_time_date, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 110, 259, -1));

        jPanel1.setBackground(new java.awt.Color(2, 119, 189));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Item Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 14), new java.awt.Color(255, 255, 255))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setForeground(java.awt.Color.white);
        jLabel5.setText("Code");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        code.setEditable(false);
        code.setMaximumSize(new java.awt.Dimension(319, 20));
        code.setMinimumSize(new java.awt.Dimension(319, 20));
        code.setPreferredSize(new java.awt.Dimension(319, 20));
        code.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                codeActionPerformed(evt);
            }
        });
        code.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                codeKeyReleased(evt);
            }
        });
        jPanel1.add(code, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, 319, 40));

        description.setMaximumSize(new java.awt.Dimension(493, 20));
        description.setMinimumSize(new java.awt.Dimension(493, 20));
        description.setPreferredSize(new java.awt.Dimension(493, 20));
        description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descriptionActionPerformed(evt);
            }
        });
        description.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                descriptionKeyReleased(evt);
            }
        });
        jPanel1.add(description, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 53, 493, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel7.setForeground(java.awt.Color.white);
        jLabel7.setText("Price");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 30, -1, -1));

        price.setMaximumSize(new java.awt.Dimension(156, 20));
        price.setMinimumSize(new java.awt.Dimension(156, 20));
        price.setPreferredSize(new java.awt.Dimension(156, 20));
        price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priceActionPerformed(evt);
            }
        });
        price.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                priceKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceKeyTyped(evt);
            }
        });
        jPanel1.add(price, new org.netbeans.lib.awtextra.AbsoluteConstraints(881, 53, 156, 40));

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel9.setForeground(java.awt.Color.white);
        jLabel9.setText("Total");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 30, -1, -1));

        total.setEditable(false);
        total.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalActionPerformed(evt);
            }
        });
        jPanel1.add(total, new org.netbeans.lib.awtextra.AbsoluteConstraints(1060, 50, 250, 40));

        li_description_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                li_description_searchMouseClicked(evt);
            }
        });
        sp_description_search.setViewportView(li_description_search);

        jPanel1.add(sp_description_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 93, 490, 110));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Code", "Description ", "Price", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTable1KeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setResizable(false);
            jTable1.getColumnModel().getColumn(1).setResizable(false);
            jTable1.getColumnModel().getColumn(2).setResizable(false);
            jTable1.getColumnModel().getColumn(3).setResizable(false);
        }

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 100, 1300, 180));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel15.setForeground(java.awt.Color.white);
        jLabel15.setText("Description ");
        jPanel1.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 30, -1, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 160, 1320, 290));

        jPanel2.setBackground(new java.awt.Color(13, 71, 161));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Invoice System");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(1152, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1370, 40));
    }// </editor-fold>//GEN-END:initComponents

    private void balActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_balActionPerformed
       new Thread(new Runnable() {

           @Override
           public void run() {
               try {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("insert into inv_invoice (id,date,total,time,discount,nettot,customername,customerid,bal,payment) values('" + id.getText() + "','" + lb_date_view.getText() + "','" + sub.getText() + "','" + lb_time_date.getText() + "','" + Dis.getText() + "','" + net.getText() + "','" + customername.getText() + "','" + customerId.getText() + "','" + bal.getText() + "','" + pay.getText() + "')");
            String invoiceId = id.getText();
            for (int i = 0; i < dtm.getRowCount(); i++) {

                ResultSet rs =MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select * from inv_stock where itemid='" + dtm.getValueAt(i, 0) + "'");
                if (rs.next()) {
                    MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("update inv_stock set qty=qty-'" + dtm.getValueAt(i, 3) + "' where itemid='" + dtm.getValueAt(i, 0) + "'");
                }
                rs.close();
               MC_JavaDataBaseConnection.myConnection().createStatement().executeUpdate("insert into inv_invoicereg (itemid,item,itemprice,subtot,invoiceid) values('" + dtm.getValueAt(i, 0) + "','" + dtm.getValueAt(i, 1) + "','" + dtm.getValueAt(i, 2) + "','" + dtm.getValueAt(i, 3) + "','"+invoiceId+"')");

            }
            String path = "src\reports\bil.jrxml";
            JasperReport compileReport = JasperCompileManager.compileReport(path);
            Map<String, Object> m = new HashMap<String, Object>();

            m.put("Invoid", id.getText());
          
            JasperPrint jp = JasperFillManager.fillReport(compileReport, m, MC_JavaDataBaseConnection.myConnection());
            JasperViewer.viewReport(jp, false);
            //JasperPrintManager.printReport(jp, false);
        } catch (Exception e) {
            e.printStackTrace();
        }
           }
       }).start();
        clearAll();
    }//GEN-LAST:event_balActionPerformed

    private void DisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DisActionPerformed

        try {
            if (Integer.parseInt(Dis.getText()) > 80) {
                JOptionPane.showMessageDialog(this, "You can't give this discount..", "Error", JOptionPane.ERROR_MESSAGE);
                Dis.setText(null);
            } else {
                double d1 = Double.parseDouble(sub.getText());
                double d2;
                if (!Dis.getText().isEmpty()) {
                    d2 = Double.parseDouble(Dis.getText());
                } else {
                    d2 = 0;
                    Dis.setText("" + 0);
                }
                double d = d1 - (d1 * d2 / 100);
                net.setText("" + d);
                pay.grabFocus();
            }
        } catch (Exception e) {
//          JOptionPane.showMessageDialog(this, "Add items...");
//            if (customername.getText().isEmpty()) {
//                customername.grabFocus();
//            } else {
//                itemNo.grabFocus();
//            }
        }
    }//GEN-LAST:event_DisActionPerformed

    private void payActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payActionPerformed
        try {
            if (net.getText().isEmpty()) {
                net.setText(sub.getText());
            }
            double d1 = Double.parseDouble(net.getText());
            double d2 = Double.parseDouble(pay.getText());
            double d = d2 - d1;
            bal.setText("" + d);
            if (d >= 0) {
                bal.grabFocus();
            }
        } catch (Exception e) {
//            JOptionPane.showMessageDialog(this, "Add items...");
//            if (customername.getText().isEmpty()) {
//                customername.grabFocus();
//            } else {
//                itemNo.grabFocus();
//            }
        }
    }//GEN-LAST:event_payActionPerformed

    private void sInvoiceIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sInvoiceIdMouseClicked

        try {
            sInvoiceIdSearch.setText(sInvoiceId.getSelectedValue().toString());
            SinvoiceId.setVisible(false);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sInvoiceIdMouseClicked

    private void sInvoiceIdKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sInvoiceIdKeyReleased
        if (evt.getKeyCode() == 10) {
            System.out.println("ok");
            try {
                sInvoiceIdSearch.setText(sInvoiceId.getSelectedValue().toString());
                SinvoiceId.setVisible(false);

            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_sInvoiceIdKeyReleased

    private void sInvoiceIdSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sInvoiceIdSearchKeyReleased
        try {

            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select id,CONVERT(SUBSTRING_INDEX(id,'INV',-1),UNSIGNED INTEGER) as newid from inv_invoice where id like '%" + sInvoiceIdSearch.getText() + "%' ORDER BY newid");
            Vector v = new Vector();

            if (sInvoiceIdSearch.getText().isEmpty()) {
                SinvoiceId.setVisible(false);

            } else {
                while (rs.next()) {
                    v.add(rs.getString("id"));

                }
                rs.close();
                sInvoiceId.setListData(v);

                if (sInvoiceId.getModel().getSize() == 0) {
                    SinvoiceId.setVisible(false);

                } else {
                    SinvoiceId.setVisible(true);

                }

            }
            if (evt.getKeyCode() == 40) {

                SinvoiceId.setVisible(true);
                SinvoiceId.grabFocus();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_sInvoiceIdSearchKeyReleased

    private void clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearActionPerformed
        code.setText(null);
        description.setText(null);
        price.setText(null);
        total.setText(null);
        lb_date_view.setText(null);
        lb_time_date.setText(null);
        id.setText(null);
        sInvoiceIdSearch.setText(null);
        customername.setText(null);
        customerId.setText(null);
        sub.setText(null);
        net.setText(null);
        bal.setText(null);
        Dis.setText(null);
        pay.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);

    }//GEN-LAST:event_clearActionPerformed

    private void findActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findActionPerformed
       new Thread(new Runnable() {

           @Override
           public void run() {
                try {

            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select i.id,i.date,i.total,i.time,i.discount,i.nettot,i.customername,i.customerid,i.bal,i.payment,"
                    + "ir.itemid,ir.item,ir.itemprice,ir.subtot,ir.invoiceid from inv_invoice i inner join inv_invoicereg ir on i.id=ir.invoiceid where i.id='" + sInvoiceIdSearch.getText() + "'");
            while (rs.next()) {

                customername.setText(rs.getString("i.customername"));
                customerId.setText(rs.getString("i.customerid"));
                lb_date_view.setText(rs.getString("i.date"));
                lb_time_date.setText(rs.getString("i.time"));
                id.setText(rs.getString("i.id"));
                sub.setText(rs.getString("i.total"));
                net.setText(rs.getString("i.nettot"));
                bal.setText(rs.getString("i.bal"));
                Dis.setText(rs.getString("i.discount"));
                pay.setText(rs.getString("i.payment"));

                DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
                Vector v = new Vector();

                v.add(rs.getString("ir.itemid"));
                v.add(rs.getString("ir.item"));
                v.add(rs.getString("ir.itemprice"));
                v.add(rs.getString("ir.subtot"));
                dtm.addRow(v);

            }
            rs.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
           }
       }).start();
    }//GEN-LAST:event_findActionPerformed

    private void customernameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_customernameFocusLost

    }//GEN-LAST:event_customernameFocusLost

    private void customernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customernameActionPerformed
        try {
            customername.setText(CustomerNameSearch.getSelectedValue().toString());
            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select id from inv_customer where fname='" + CustomerNameSearch.getSelectedValue().toString() + "'");
            if (rs.next()) {
                customerId.setText(rs.getString("id"));
                customerNameSearch.setVisible(false);
                code.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_customernameActionPerformed

    private void customernameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customernameKeyReleased
        try {

            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select fname from inv_customer where fname like '" + customername.getText() + "%' and state='Active'");
            Vector v = new Vector();

            if (customername.getText().isEmpty()) {
                customerNameSearch.setVisible(false);
                customerId.setText(null);
            } else {
                while (rs.next()) {
                    v.add(rs.getString("fname"));

                }
                rs.close();
                CustomerNameSearch.setListData(v);

                if (CustomerNameSearch.getModel().getSize() == 0) {
                    customerNameSearch.setVisible(false);

                } else {
                    customerNameSearch.setVisible(true);
                }

            }
            if (evt.getKeyCode() == 40) {

                customerNameSearch.setVisible(true);
                CustomerNameSearch.grabFocus();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_customernameKeyReleased

    private void customernameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_customernameKeyTyped

    }//GEN-LAST:event_customernameKeyTyped

    private void CustomerNameSearchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerNameSearchMouseClicked
        try {
            customername.setText(CustomerNameSearch.getSelectedValue().toString());
            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select id from inv_customer where fname='" + CustomerNameSearch.getSelectedValue().toString() + "'");
            if (rs.next()) {
                customerId.setText(rs.getString("id"));
                customerNameSearch.setVisible(false);
                code.grabFocus();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_CustomerNameSearchMouseClicked

    private void CustomerNameSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CustomerNameSearchKeyReleased
        if (evt.getKeyCode() == 10) {
            System.out.println("ok");
            try {
                customername.setText(CustomerNameSearch.getSelectedValue().toString());
                ResultSet rs1 =  MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select id from inv_customer where fname='" + CustomerNameSearch.getSelectedValue().toString() + "'");
                if (rs1.next()) {
                    customerId.setText(rs1.getString("id"));
                    customerNameSearch.setVisible(false);
                    code.grabFocus();
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_CustomerNameSearchKeyReleased

    private void codeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_codeActionPerformed

       
    }//GEN-LAST:event_codeActionPerformed

    private void codeKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_codeKeyReleased
        if (evt.getKeyCode() == evt.VK_F4) {
            pay.grabFocus();
        }
        if (evt.getKeyCode() == evt.VK_F5) {
            Dis.grabFocus();
        }
    }//GEN-LAST:event_codeKeyReleased

    private void descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descriptionActionPerformed
 try {
            ResultSet rs =  MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select code,price from inv_saloon_jobs where description='" + description.getText() + "'");
            if (rs.next()) {
                code.setText(rs.getString("code"));
                price.setText(rs.getString("price"));
               
            } else {
                JOptionPane.showMessageDialog(this, "Invalide Item ID");
            }
            rs.close();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_descriptionActionPerformed

    private void priceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priceActionPerformed
    total.setText(price.getText());
    }//GEN-LAST:event_priceActionPerformed

    private void priceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyReleased
        char c = evt.getKeyChar();
        if (Character.isLetter(c)) {
            evt.consume();
        }
    }//GEN-LAST:event_priceKeyReleased

    private void totalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalActionPerformed
        addTable();
    }//GEN-LAST:event_totalActionPerformed

    private void jTable1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyReleased
        if (evt.getKeyCode() == 114) {
            DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
            int i = jTable1.getSelectedRow();
            dtm.removeRow(i);
        }
    }//GEN-LAST:event_jTable1KeyReleased

    private void DisKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_DisKeyTyped
        char c = evt.getKeyChar();
        if (!(c == '1' || c == '2' || c == '3' || c == '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9' || c == '0')) {
            evt.consume();
        }
    }//GEN-LAST:event_DisKeyTyped

    private void payKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_payKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(c == '1' || c == '2' || c == '3' || c == '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9' || c == '0')) {
            evt.consume();
        }
    }//GEN-LAST:event_payKeyTyped

    private void priceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceKeyTyped
  char c = evt.getKeyChar();
        if (!(c == '1' || c == '2' || c == '3' || c == '4' || c == '5' || c == '6' || c == '7' || c == '8' || c == '9' || c == '0')) {
            evt.consume();
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_priceKeyTyped

    private void descriptionKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_descriptionKeyReleased
        try {

            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select description from inv_saloon_jobs where description like '" + description.getText() + "%' ");
            Vector v = new Vector();

            if (description.getText().isEmpty()) {
                sp_description_search.setVisible(false);
                code.setText(null);
            } else {
                while (rs.next()) {
                    v.add(rs.getString("description"));

                }
                rs.close();
                li_description_search.setListData(v);

                if (li_description_search.getModel().getSize() == 0) {
                    sp_description_search.setVisible(false);

                } else {
                    sp_description_search.setVisible(true);
                }

            }
            if (evt.getKeyCode() == 40) {

                 sp_description_search.setVisible(true);
                 li_description_search.grabFocus();
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        if (evt.getKeyCode() == evt.VK_F4) {
            pay.grabFocus();
        }
        if (evt.getKeyCode() == evt.VK_F5) {
            Dis.grabFocus();
        }
    }//GEN-LAST:event_descriptionKeyReleased

    private void li_description_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_li_description_searchMouseClicked

        try {
            description.setText(li_description_search.getSelectedValue().toString());
            ResultSet rs = MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select code,price from inv_saloon_jobs where description='" + li_description_search.getSelectedValue().toString() + "'");
            if (rs.next()) {
                 code.setText(rs.getString("code"));
                price.setText(rs.getString("price"));
                sp_description_search.setVisible(false);
                
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }//GEN-LAST:event_li_description_searchMouseClicked

    private void customerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_customerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_customerIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList CustomerNameSearch;
    private javax.swing.JTextField Dis;
    private javax.swing.JScrollPane SinvoiceId;
    private javax.swing.JTextField bal;
    private javax.swing.JButton clear;
    private javax.swing.JTextField code;
    private javax.swing.JTextField customerId;
    private javax.swing.JScrollPane customerNameSearch;
    public javax.swing.JTextField customername;
    private javax.swing.JTextField description;
    private javax.swing.JButton find;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField lb_date_view;
    private javax.swing.JTextField lb_time_date;
    private javax.swing.JList li_description_search;
    private javax.swing.JTextField net;
    private javax.swing.JTextField pay;
    private javax.swing.JTextField price;
    private javax.swing.JList sInvoiceId;
    private javax.swing.JTextField sInvoiceIdSearch;
    private javax.swing.JScrollPane sp_description_search;
    private javax.swing.JTextField sub;
    private javax.swing.JTextField total;
    // End of variables declaration//GEN-END:variables

    private void addTable() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        Vector v = new Vector();
        int i;
        int count = -1;
        boolean flag = false;

        try {
            for (i = 0; i < jTable1.getRowCount(); i++) {

                item = dtm.getValueAt(i, 0).toString();

                if (code.getText().equals(item)) {
                    qt = dtm.getValueAt(i, 3).toString();
                    count = i;
                    flag = true;
                    break;
                }

            }
             if (flag) {
//                System.out.println(item);
////                Double qun = Double.parseDouble(qt) + Double.parseDouble(qty.getText());
//                Double tot1 = qun * Double.parseDouble(price.getText());
//                dtm.setValueAt(qun, i, 3);
//                dtm.setValueAt(tot1, i, 4);
                clear();
                caltot();
            } else {
                SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                v.add(code.getText());
                v.add(description.getText());
                v.add(price.getText());
                v.add(total.getText());
                dtm.addRow(v);

                clear();
                caltot();
            }

            

                clear();
                caltot();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clearAll() {
        clear();
        customername.setText(null);
        customerId.setText(null);
        loadInvoiceId();
        loadTimeAndDate();
        sub.setText(null);
        net.setText(null);
        bal.setText(null);
        Dis.setText(null);
        pay.setText(null);
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        dtm.setRowCount(0);
    }

    private void loadInvoiceId() {
        try {
            ResultSet rs =  MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select count(id) as x from inv_invoice");
            if (rs.next()) {
                int i = Integer.parseInt(rs.getString("x"));
                ++i;
                id.setText("INV00" + i);
                ResultSet rs1 =  MC_JavaDataBaseConnection.myConnection().createStatement().executeQuery("select id from inv_invoice where id='" + id.getText() + "'");
                if (rs1.next()) {
                    ++i;
                    id.setText("INV00" + i);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void loadTimeAndDate() {
        try {
            showDate();
            showTime();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void clear() {
        code.setText(null);
      
        description.setText(null);
        price.setText(null);
        total.setText(null);
        code.grabFocus();
    }

    private void caltot() {
        DefaultTableModel dtm = (DefaultTableModel) jTable1.getModel();
        double tot = 0;
        for (int i = 0; i < dtm.getRowCount(); i++) {
            tot += Double.parseDouble(dtm.getValueAt(i, 3).toString());
        }
        sub.setText("" + tot);
    }
    
    void showTime() {
        new Timer(0, new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent ae) {

                Date d = new Date();
                SimpleDateFormat stim = new SimpleDateFormat("hh:mm:ss a");
                String st = stim.format(d);
                lb_time_date.setText(st);

            }
        }).start();
    }

    void showDate() {
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        String s = sdf.format(d);
        lb_date_view.setText(s);
        System.out.println(s);

    }
}
